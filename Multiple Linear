import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.linear_model import LinearRegression 
from sklearn.model_selection import train_test_split, cross_val_score, 
KFold 
from sklearn.metrics import mean_squared_error, r2_score 
from sklearn.preprocessing import LabelEncoder 
data = pd.read_csv(r"D:\python\Student_Performance.csv") 
le = LabelEncoder() 
data['Extracurricular Activities'] = 
le.fit_transform(data['Extracurricular Activities']) 
X = data.drop('Performance Index', axis=1) 
y = data['Performance Index'] 
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, 
random_state=42) 
mlr = LinearRegression() 
mlr.fit(X_train, y_train) 
y_train_pred = mlr.predict(X_train) 
y_test_pred = mlr.predict(X_test) 
train_mse = mean_squared_error(y_train, y_train_pred) 
test_mse = mean_squared_error(y_test, y_test_pred) 
train_r2 = r2_score(y_train, y_train_pred) 
test_r2 = r2_score(y_test, y_test_pred) 
print("=== Train/Test Split Evaluation ===") 
print(f"Train MSE: {train_mse}") 
print(f"Test MSE: {test_mse}") 
print(f"Train R2 Score: {train_r2}") 
print(f"Test R2 Score: {test_r2}") 
kf = KFold(n_splits=10, shuffle=True, random_state=42) 
cv_mse = -cross_val_score(mlr, X, y, cv=kf, 
scoring='neg_mean_squared_error') 
cv_r2 = cross_val_score(mlr, X, y, cv=kf, scoring='r2') 
print("\n=== 10-Fold Cross Validation ===") 
print(f"Average CV MSE: {np.mean(cv_mse)}") 
print(f"Average CV R2 Score: {np.mean(cv_r2)}") 
plt.figure(figsize=(6, 4)) 
plt.scatter(y_test, y_test_pred, color='blue', alpha=0.6) 
plt.plot([y.min(), y.max()], [y.min(), y.max()], 'r--') 
plt.xlabel("Actual Performance Index") 
plt.ylabel("Predicted Performance Index") 
plt.title("Multiple Linear Regression: Actual vs Predicted") 
plt.grid(True) 
plt.show() 
