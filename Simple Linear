import numpy as np 
import pandas as pd 
import matplotlib.pyplot as plt 
from sklearn.linear_model import LinearRegression 
from sklearn.model_selection import train_test_split, cross_val_score, KFold 
from sklearn.metrics import mean_squared_error, r2_score 

# === Load your CSV data ===
df = pd.read_csv(r"D:\python\Salary_Data.csv")  
X = df[['YearsExperience']].values  
y = df['Salary'].values     

# === Train/test split ===
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42) 

lr = LinearRegression() 
lr.fit(X_train, y_train) 

y_train_pred = lr.predict(X_train) 
y_test_pred = lr.predict(X_test) 

train_mse = mean_squared_error(y_train, y_train_pred) 
test_mse = mean_squared_error(y_test, y_test_pred) 
train_r2 = r2_score(y_train, y_train_pred) 
test_r2 = r2_score(y_test, y_test_pred) 

print("=== Train/Test Split Evaluation ===") 
print(f"Train MSE: {train_mse}") 
print(f"Test MSE: {test_mse}") 
print(f"Train R2 Score: {train_r2}") 
print(f"Test R2 Score: {test_r2}") 

kf = KFold(n_splits=10, shuffle=True, random_state=42) 
cv_mse = -cross_val_score(lr, X, y, cv=kf, scoring='neg_mean_squared_error') 
cv_r2 = cross_val_score(lr, X, y, cv=kf, scoring='r2') 

print("\n=== 10-Fold Cross Validation ===") 
print(f"Cross-validation MSE Scores: {cv_mse}") 
print(f"Average CV MSE: {np.mean(cv_mse)}") 
print(f"Cross-validation R2 Scores: {cv_r2}") 
print(f"Average CV R2 Score: {np.mean(cv_r2)}") 

plt.figure(figsize=(8, 5)) 
plt.scatter(X, y, color='gray', alpha=0.6, label='Data') 
plt.plot(X, lr.predict(X), color='blue', label='Regression Line') 
plt.xlabel("X") 
plt.ylabel("y") 
plt.title("Simple Linear Regression") 
plt.legend() 
plt.grid(True) 
plt.show()
